// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Track {
  id        String          @id @default(cuid())
  title     String
  duration  Int
  createdAt DateTime        @default(now())
  updatedAt DateTime        @updatedAt
  album     Album           @relation(fields: [albumId], references: [id])
  albumId   String
  artist    Artist          @relation(fields: [artistId], references: [id])
  artistId  String
  position  Int
  playlists PlaylistTrack[]
}

model Album {
  id        String   @id @default(cuid())
  title     String
  artistId  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  artist    Artist   @relation(fields: [artistId], references: [id])
  tracks    Track[]
}

model Artist {
  id        String   @id @default(cuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  albums    Album[]
  tracks    Track[]
}

model PlaylistTrack {
  id         String   @id @default(cuid())
  playlist   Playlist @relation(fields: [playlistId], references: [id])
  playlistId String
  track      Track    @relation(fields: [trackId], references: [id])
  trackId    String
  position   Int
}

model Playlist {
  id        String          @id @default(cuid())
  name      String
  createdAt DateTime        @default(now())
  updatedAt DateTime        @updatedAt
  tracks    PlaylistTrack[]
  owner     User?           @relation(fields: [ownerId], references: [id])
  ownerId   String?
  users     User[]          @relation("UserPlaylists")
}

model User {
  id             String     @id @default(cuid())
  name           String     @unique
  role           String     @default("USER")
  password       String
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  ownedPlaylists Playlist[]
  playlists      Playlist[] @relation("UserPlaylists")
}
